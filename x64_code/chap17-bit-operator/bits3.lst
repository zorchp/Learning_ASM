     1                                  extern printb
     2                                  extern printf
     3                                  
     4                                  section .data
     5 00000000 4E6F20626974732061-     	msg1 db "No bits are set:", 10, 0
     5 00000009 7265207365743A0A00 
     6 00000012 0A5365742062697420-     	msg2 db 10, "Set bit #4, that is the 5th bit:", 10, 0
     6 0000001B 23342C207468617420-
     6 00000024 697320746865203574-
     6 0000002D 68206269743A0A00   
     7 00000035 0A5365742062697420-     	msg3 db 10, "Set bit #7, that is the 8th bit:", 10, 0
     7 0000003E 23372C207468617420-
     7 00000047 697320746865203874-
     7 00000050 68206269743A0A00   
     8 00000058 0A5365742062697420-     	msg4 db 10, "Set bit #8, that is the 9th bit:", 10, 0
     8 00000061 23382C207468617420-
     8 0000006A 697320746865203974-
     8 00000073 68206269743A0A00   
     9 0000007B 0A5365742062697420-     	msg5 db 10, "Set bit #61, that is the 62nd bit:", 10, 0
     9 00000084 2336312C2074686174-
     9 0000008D 206973207468652036-
     9 00000096 326E64206269743A0A-
     9 0000009F 00                 
    10 000000A0 0A436C656172206269-     	msg6 db 10, "Clear bit #8, that is the 9th bit:", 10, 0
    10 000000A9 742023382C20746861-
    10 000000B2 742069732074686520-
    10 000000BB 397468206269743A0A-
    10 000000C4 00                 
    11 000000C5 0A5465737420626974-     	msg7 db 10, "Test bit #61, and display rdi:", 10, 0
    11 000000CE 202336312C20616E64-
    11 000000D7 20646973706C617920-
    11 000000E0 7264693A0A00       
    12 000000E6 0000000000000000        	bitflags dq 0
    13                                  
    14                                  section .bss
    15                                  section .text
    16                                  	global main
    17                                  
    18                                  main:
    19 00000000 55                      	push rbp 
    20 00000001 4889E5                  	mov rbp, rsp
    21                                  
    22                                  	;print title
    23 00000004 48BF-                   	mov rdi, msg1
    23 00000006 [0000000000000000] 
    24 0000000E 4831C0                  	xor rax, rax
    25 00000011 E8(00000000)            	call printf
    26                                  
    27                                  	;print bitflags
    28 00000016 488B3C25[E6000000]      	mov rdi, [bitflags]
    29 0000001E E8(00000000)            	call printb
    30                                  
    31                                  	;set bit 4 (the 5th)
    32 00000023 48BF-                   	mov rdi, msg2
    32 00000025 [1200000000000000] 
    33 0000002D 4831C0                  	xor rax, rax
    34 00000030 E8(00000000)            	call printf
    35                                  
    36 00000035 480FBA2C25-             	bts qword [bitflags], 4 
    36 0000003A [E6000000]04       
    37 0000003F 488B3C25[E6000000]      	mov rdi, [bitflags]
    38 00000047 E8(00000000)            	call printb
    39                                  
    40                                  	;set bit7
    41 0000004C 48BF-                   	mov rdi, msg3
    41 0000004E [3500000000000000] 
    42 00000056 4831C0                  	xor rax, rax
    43 00000059 E8(00000000)            	call printf
    44                                  
    45 0000005E 480FBA2C25-             	bts qword [bitflags], 7
    45 00000063 [E6000000]07       
    46 00000068 488B3C25[E6000000]      	mov rdi, [bitflags]
    47 00000070 E8(00000000)            	call printb
    48                                  
    49                                  	;set bit8
    50 00000075 48BF-                   	mov rdi, msg4
    50 00000077 [5800000000000000] 
    51 0000007F 4831C0                  	xor rax, rax
    52 00000082 E8(00000000)            	call printf
    53                                  
    54 00000087 480FBA2C25-             	bts qword [bitflags], 8
    54 0000008C [E6000000]08       
    55 00000091 488B3C25[E6000000]      	mov rdi, [bitflags]
    56 00000099 E8(00000000)            	call printb
    57                                  
    58                                  	;set bit61
    59 0000009E 48BF-                   	mov rdi, msg5
    59 000000A0 [7B00000000000000] 
    60 000000A8 4831C0                  	xor rax, rax
    61 000000AB E8(00000000)            	call printf
    62                                  
    63 000000B0 480FBA2C25-             	bts qword [bitflags], 61
    63 000000B5 [E6000000]3D       
    64 000000BA 488B3C25[E6000000]      	mov rdi, [bitflags]
    65 000000C2 E8(00000000)            	call printb
    66                                  
    67                                  	;clear bit8
    68 000000C7 48BF-                   	mov rdi, msg6
    68 000000C9 [A000000000000000] 
    69 000000D1 4831C0                  	xor rax, rax
    70 000000D4 E8(00000000)            	call printf
    71                                  
    72 000000D9 480FBA3425-             	btr qword [bitflags], 8
    72 000000DE [E6000000]08       
    73 000000E3 488B3C25[E6000000]      	mov rdi, [bitflags]
    74 000000EB E8(00000000)            	call printb
    75                                  
    76                                  	;test bit61
    77 000000F0 48BF-                   	mov rdi, msg7
    77 000000F2 [C500000000000000] 
    78 000000FA 4831C0                  	xor rax, rax
    79 000000FD E8(00000000)            	call printf
    80 00000102 4831FF                  	xor rdi, rdi
    81 00000105 B83D000000              	mov rax, 61
    82 0000010A 4831FF                  	xor rdi, rdi
    83 0000010D 480FA30425-             	bt [bitflags], rax
    83 00000112 [E6000000]         
    84 00000116 400F92C7                	setc dil
    85 0000011A E8(00000000)            	call printb
    86                                  
    87                                  
    88 0000011F C9                      	leave 
    89 00000120 C3                      	ret
    90                                  
