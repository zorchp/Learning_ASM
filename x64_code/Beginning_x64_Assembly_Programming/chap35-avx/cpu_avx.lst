     1                                  extern printf
     2                                  section .data
     3 00000000 546869732063707520-         fmt_noavx db "This cpu does not support AVX.", 0xa, 0
     3 00000009 646F6573206E6F7420-
     3 00000012 737570706F72742041-
     3 0000001B 56582E0A00         
     4 00000020 546869732063707520-         fmt_avx db "This cpu supports AVX.", 0xa, 0
     4 00000029 737570706F72747320-
     4 00000032 4156582E0A00       
     5 00000038 546869732063707520-         fmt_noavx2 db "This cpu does not support AVX2.", 0xa, 0
     5 00000041 646F6573206E6F7420-
     5 0000004A 737570706F72742041-
     5 00000053 5658322E0A00       
     6 00000059 546869732063707520-         fmt_avx2 db "This cpu supports AVX2.", 0xa, 0
     6 00000062 737570706F72747320-
     6 0000006B 415658322E0A00     
     7 00000072 546869732063707520-         fmt_noavx512 db "This cpu does not support AVX512.", 0xa, 0
     7 0000007B 646F6573206E6F7420-
     7 00000084 737570706F72742041-
     7 0000008D 56583531322E0A00   
     8 00000095 546869732063707520-         fmt_avx512 db "This cpu supports AVX512.", 0xa, 0
     8 0000009E 737570706F72747320-
     8 000000A7 4156583531322E0A00 
     9                                  
    10                                  section .bss
    11                                  section .text 
    12                                      global main
    13                                  
    14                                  main:
    15 00000000 55                          push rbp
    16 00000001 4889E5                      mov rbp, rsp
    17 00000004 E802000000                  call cpu_sse
    18 00000009 C9                          leave
    19 0000000A C3                          ret
    20                                  
    21                                  cpu_sse:
    22 0000000B 55                          push rbp 
    23 0000000C 4889E5                      mov rbp, rsp
    24                                      ;; test avx
    25 0000000F B801000000                  mov eax, 1
    26 00000014 0FA2                        cpuid
    27 00000016 B81C000000                  mov eax, 28; test bit  ecx 28
    28 0000001B 0FA3C1                      bt ecx, eax
    29 0000001E 7368                        jnc no_avx
    30 00000020 4831C0                      xor rax, rax
    31 00000023 48BF-                       mov rdi, fmt_avx
    31 00000025 [2000000000000000] 
    32 0000002D E8(00000000)                call printf
    33                                  
    34                                      ;; test avx2
    35 00000032 B807000000                  mov eax, 7
    36 00000037 B900000000                  mov ecx, 0
    37 0000003C 0FA2                        cpuid
    38 0000003E B805000000                  mov eax, 5
    39 00000043 0FA3C3                      bt ebx, eax
    40 00000046 0F8381000000                jnc the_exit
    41 0000004C 4831C0                      xor rax, rax
    42 0000004F 48BF-                       mov rdi, fmt_avx2
    42 00000051 [5900000000000000] 
    43 00000059 E8(00000000)                call printf
    44                                  
    45                                      ;;test avx512
    46 0000005E B807000000                  mov eax, 7
    47 00000063 B900000000                  mov ecx, 0
    48 00000068 0FA2                        cpuid
    49 0000006A B810000000                  mov eax, 16
    50 0000006F 0FA3C3                      bt ebx, eax
    51 00000072 7342                        jnc no_avx512
    52 00000074 4831C0                      xor rax, rax
    53 00000077 48BF-                       mov rdi, fmt_avx512
    53 00000079 [9500000000000000] 
    54 00000081 E8(00000000)                call printf
    55 00000086 EB45                        jmp the_exit
    56                                  
    57                                  no_avx:
    58 00000088 48BF-                       mov rdi, fmt_noavx
    58 0000008A [0000000000000000] 
    59 00000092 4831C0                      xor rax, rax
    60 00000095 E8(00000000)                call printf
    61 0000009A 4831C0                      xor rax, rax
    62 0000009D EB2E                        jmp the_exit
    63                                  
    64                                  no_avx2:
    65 0000009F 48BF-                       mov rdi, fmt_noavx2
    65 000000A1 [3800000000000000] 
    66 000000A9 4831C0                      xor rax, rax
    67 000000AC E8(00000000)                call printf
    68 000000B1 4831C0                      xor rax, rax
    69 000000B4 EB17                        jmp the_exit
    70                                  
    71                                  no_avx512:
    72 000000B6 48BF-                       mov rdi, fmt_noavx512
    72 000000B8 [7200000000000000] 
    73 000000C0 4831C0                      xor rax, rax
    74 000000C3 E8(00000000)                call printf
    75 000000C8 4831C0                      xor rax, rax
    76 000000CB EB00                        jmp the_exit
    77                                  
    78                                  the_exit:
    79 000000CD C9                          leave
    80 000000CE C3                          ret
    81                                  
